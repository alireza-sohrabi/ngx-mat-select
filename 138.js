"use strict";(self.webpackChunkngx_mat_select=self.webpackChunkngx_mat_select||[]).push([[138],{3138:(f,t,d)=>{d.r(t),d.d(t,{DynamicComponent:()=>o,DynamicModule:()=>p});var l=d(2117),g=d(6814),c=d(6286),i=d(2286),a=d(5879);let o=(()=>{class e extends c.a{constructor(){super(),this.routePrefix=void 0,this.pageType="api",this.pageContent='<header class="ngde"><div class="ng-doc-page-tags ngde"><span class="ng-doc-tag ngde" indexable="false" data-content="ng-doc-scope">select</span> <span class="ng-doc-inline-delimiter ngde" indexable="false">/</span> <span class="ng-doc-tag ngde" indexable="false" data-content="Interface">Interface</span></div><h1 id="ngxmatselectconfig" class="ngde">NgxMatSelectConfig<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/select-api/interfaces/NgxMatSelectConfig#ngxmatselectconfig"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><div class="ng-doc-header-details ngde" indexable="false"><span class="ng-doc-header-details-label ngde">Extends</span><code indexable="false" class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/select-api/interfaces/NgxMatSelectSearchBoxConfigs" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NgxMatSelectSearchBoxConfigs</a></code></div></header><section class="ngde"><p class="ngde">Object that can be used to configure the default options for the select module.</p></section><section class="ngde"><h2 id="properties" class="ngde">Properties<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/select-api/interfaces/NgxMatSelectConfig#properties"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-properties-table ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ng-doc-properties-table-name ngde">Name</th><th class="ng-doc-properties-table-type ngde">Type</th><th class="ng-doc-properties-table-description ngde">Description</th></tr></thead><tbody class="ngde"><tr data-slug="dataKey" data-slugtype="member" id="dataKey" class="ngde"><td indexable="false" class="ngde">dataKey<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string | undefined</code></td><td class="ngde"><p class="ngde">A property to uniquely identify a value in options.</p></td></tr><tr data-slug="hasBackButton" data-slugtype="member" id="hasBackButton" class="ngde"><td indexable="false" class="ngde">hasBackButton<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">boolean | undefined</code></td><td class="ngde"></td></tr><tr data-slug="hasSearchBox" data-slugtype="member" id="hasSearchBox" class="ngde"><td indexable="false" class="ngde">hasSearchBox<div class="ng-doc-node-details ngde">inherited from <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/select-api/interfaces/NgxMatSelectSearchBoxConfigs" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NgxMatSelectSearchBoxConfigs</a></code></div></td><td class="ngde"><code indexable="false" class="ngde">boolean | undefined</code></td><td class="ngde"></td></tr><tr data-slug="multipleDisplay" data-slugtype="member" id="multipleDisplay" class="ngde"><td indexable="false" class="ngde">multipleDisplay<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">NgxMatSelectMultipleDisplay | undefined</code></td><td class="ngde"><p class="ngde">how to show the selected options inside the form-field when the multiple value it\'s true</p></td></tr><tr data-slug="optionHeight" data-slugtype="member" id="optionHeight" class="ngde"><td indexable="false" class="ngde">optionHeight<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">number | undefined</code></td><td class="ngde"><p class="ngde">the height of an option, it\'s really important to handle the virtual scroll</p></td></tr><tr data-slug="optionLabel" data-slugtype="member" id="optionLabel" class="ngde"><td indexable="false" class="ngde">optionLabel<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string | undefined</code></td><td class="ngde"><p class="ngde">Name of the label field of an option</p></td></tr><tr data-slug="optionValue" data-slugtype="member" id="optionValue" class="ngde"><td indexable="false" class="ngde">optionValue<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string | undefined</code></td><td class="ngde"><p class="ngde">Name of the value field of an option.</p></td></tr><tr data-slug="overlayPanelClass" data-slugtype="member" id="overlayPanelClass" class="ngde"><td indexable="false" class="ngde">overlayPanelClass<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string | string[] | undefined</code></td><td class="ngde"><p class="ngde">Class or list of classes to be applied to the menu\'s overlay panel.</p></td></tr><tr data-slug="panelHeight" data-slugtype="member" id="panelHeight" class="ngde"><td indexable="false" class="ngde">panelHeight<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">number | null | undefined</code></td><td class="ngde"><p class="ngde">the height of the panel</p></td></tr><tr data-slug="panelWidth" data-slugtype="member" id="panelWidth" class="ngde"><td indexable="false" class="ngde">panelWidth<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string | number | null | undefined</code></td><td class="ngde"><p class="ngde">/** Width of the panel. If set to <code class="ngde">auto</code>, the panel will match the trigger width. If set to null or an empty string, the panel will grow to match the longest option\'s text.</p></td></tr><tr data-slug="searchBoxPlaceholder" data-slugtype="member" id="searchBoxPlaceholder" class="ngde"><td indexable="false" class="ngde">searchBoxPlaceholder<div class="ng-doc-node-details ngde">inherited from <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/select-api/interfaces/NgxMatSelectSearchBoxConfigs" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NgxMatSelectSearchBoxConfigs</a></code></div></td><td class="ngde"><code indexable="false" class="ngde">string | undefined</code></td><td class="ngde"></td></tr><tr data-slug="viewType" data-slugtype="member" id="viewType" class="ngde"><td indexable="false" class="ngde">viewType<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">NgxMatSelectViewType | undefined</code></td><td class="ngde"></td></tr></tbody></table></div></section>',this.demo=void 0,this.demoAssets=void 0}}return e.\u0275fac=function(s){return new(s||e)},e.\u0275cmp=a.Xpm({type:e,selectors:[["ng-doc-page-api-select-api-interfaces-ngx-mat-select-config"]],features:[a._Bn([{provide:c.a,useExisting:e}]),a.qOj],decls:1,vars:0,template:function(s,h){1&s&&a._UZ(0,"ng-doc-page")},dependencies:function(){return[i.z]},encapsulation:2,changeDetection:0}),e})(),p=(()=>{class e{}return e.\u0275fac=function(s){return new(s||e)},e.\u0275mod=a.oAB({type:e}),e.\u0275inj=a.cJS({imports:[g.ez,i.z,l.Bz.forChild([{path:"",component:o,title:"NgxMatSelectConfig"}]),l.Bz]}),e})()}}]);